<?php
 
class custom_views_handler_special_data_filter_view extends views_handler_filter_many_to_one
{
    /**
     * Shortcut to display the exposed options form.
     */
    function value_form(&$form, &$form_state) {
        $efq = new EntityFieldQuery();
          $efq->entityCondition('entity_type', 'node')
              ->entityCondition('bundle', 'grad')
              ->fieldCondition('field_tagovi', 'tid', 18);

 
          $results = $efq->execute();
          $entities = entity_load('node', array_keys($results['node']));
 
          if (!empty($entities)) {
            foreach ($entities as $entity) {
              $options[$entity->nid] = $entity->title;
            }
          }
 
          $form['value']['#type'] = 'select';
          $form['value']['#multiple'] = TRUE;
          $form['value']['#options'] = !empty($options) ? $options : array();
          $form['value']['#size'] = 5;
    }
 
 
    /**
     * Change the query.
     */
    function query() {
        $this->ensure_my_table();
        $args = array_values($this->value);
        $this->query->add_where_expression($this->options['group'], "$this->table.$this->real_field IN (:placeholder) ", array(':placeholder' => $args),
      $args);
   }
}

function custom_views_views_data() {
  // Adds our field in the "Filters" section of Views
  $data['node']['nid2']['filter'] = array(
    'title' => t('Autocomplete nid'),
    'help' => t('Autocomplete nid'),
    'real field' => 'nid',
    'handler' => 'custom_views_handler_special_data_filter_view',
  );
 
  return $data;
}
